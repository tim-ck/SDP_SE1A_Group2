<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>